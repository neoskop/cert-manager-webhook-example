name: Run webhook tests

on:
  workflow_call:


jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Start minikube
      uses: medyagh/setup-minikube@master
      with:
        kubernetes-version: 1.21.2

    - name: Install cert-manager
      run: kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.14.3/cert-manager.yaml

    - name: Wait for cert-manager to be ready
      run: |
        kubectl wait --for=condition=available --timeout=600s deployment/cert-manager-webhook -n cert-manager
        kubectl get pods -n cert-manager
        kubectl get svc -n cert-manager -o wide

    - name: Install cert-manager-webhook-dnsimple
      env:
        DNSIMPLE_API_TOKEN: ${{ secrets.DNSIMPLE_API_TOKEN }}
      run: |
        helm install cert-manager-webhook-dnsimple ./charts/cert-manager-webhook-dnsimple \
          --set dnsimple.token='$DNSIMPLE_API_TOKEN' \
          --set dnsimple.apiBaseURL=https://api.sandbox.dnsimple.com \
          --set image.repository=ghcr.io/moll-re/cert-manager-webhook-dnsimple \
          --set clusterIssuer.production.enabled=true \
          --set clusterIssuer.email=test@puzzle.ch \
          --set image.tag=latest
        kubectl get secrets cert-manager-webhook-dnsimple -o yaml
      # --set image.tag=${{ github.sha}}
    - name: Wait for cert-manager-webhook-dnsimple to be ready
      run: |
        kubectl wait --for=condition=available --timeout=600s deployment/cert-manager-webhook-dnsimple
        kubectl get pods
        kubectl get svc -o wide
  
    - name: Create sample certificate that uses the webhook
      run: |
        kubectl apply -f - <<EOF
        apiVersion: cert-manager.io/v1
        kind: Certificate
        metadata:
          name: dnsimple-test
          namespace: default
        spec:
          dnsNames:
            - test.puzzzzle.ch
          issuerRef:
            name: cert-manager-webhook-dnsimple-production
            kind: ClusterIssuer
          secretName: dnsimple-test-tls
        EOF

    
    - name: Check DNSimple API for new TXT record
      env:
        DNSIMPLE_API_TOKEN: ${{ secrets.DNSIMPLE_API_TOKEN }}
      run: |
        echo "Checking for new TXT record"
        echo "DNSIMPLE_API_TOKEN: $DNSIMPLE_API_TOKEN"
        echo "DNSIMPLE_API_TOKEN: ${{ secrets.DNSIMPLE_API_TOKEN }}"

        curl \
          -H "Authorization: Bearer ${{ secrets.DNSIMPLE_API_TOKEN }}" \
          -H 'Accept: application/json' \
          -X GET https://api.sandbox.dnsimple.com/v2/2250/zones/puzzzzle.ch/records?type=TXT \
          -o records.json
        cat records.json
        echo "$(jq '.data[].content' records.json)"
