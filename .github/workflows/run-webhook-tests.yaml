name: Run webhook tests

on:
  workflow_call:


jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Start minikube
      uses: medyagh/setup-minikube@master
      with:
        kubernetes-version: 1.21.2

    - name: Install cert-manager
      run: kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.14.3/cert-manager.yaml

    - name: Wait for cert-manager to be ready
      run: |
        kubectl wait --for=condition=available --timeout=600s deployment/cert-manager-webhook -n cert-manager
        kubectl get pods -n cert-manager
        kubectl get svc -n cert-manager -o wide

    - name: Install cert-manager-webhook-dnsimple
      env:
        API_TOKEN: ${{ secrets.DNSIMPLE_API_TOKEN }}
      run: |
        helm install cert-manager-webhook-dnsimple ./charts/cert-manager-webhook-dnsimple \
          --set dnsimple.token='${{ secrets.DNSIMPLE_API_TOKEN }}' \
          --set dnsimple.apiBaseURL=https://api.sandbox.dnsimple.com \
          --set image.repository=ghcr.io/moll-re/cert-manager-webhook-dnsimple \
          --set image.tag=latest
      # --set image.tag=${{ github.sha}}

    - name: Create sample ingress that uses cert-manager
      run: |
        kubectl apply -f - <<EOF
        apiVersion: networking.k8s.io/v1
        kind: Ingress
        metadata:
          name: sample-ingress
        spec:
          tls:
            - hosts:
              - test.puzzzzle.ch
          rules:
            - host: test.puzzzzle.ch
              http:
                paths:
                - path: /
                pathType: Prefix
                backend:
                  service:
                  name: your-service
                  port:
                    number: 80

    - name: Check DNSimple API for new TXT record
      run: |
        curl \
          -H 'Authorization: Bearer ${{ secrets.DNSIMPLE_API_TOKEN }}' \
          -H 'Accept: application/json' \
          -X GET https://api.sandbox.dnsimple.com/v2/2250/zones/test.puzzzzle.ch/records?type=TXT
